"0","# Load libraries"
"0","library(tidyverse)"
"0","library(caret)"
"0","library(randomForest)"
"0",""
"0","# Load the dataset"
"0","wine <- read.csv(""winequality_red.csv"")"
"0",""
"0","# Create a binary target: High quality if quality >=6"
"0","wine$quality_label <- ifelse(wine$quality >= 6, ""High"", ""Low"")"
"0","wine$quality_label <- as.factor(wine$quality_label)"
"0",""
"0","# Drop original 'quality' column"
"0","wine <- wine %>% select(-quality)"
"0",""
"0","# Split into train and test sets"
"0","set.seed(123)"
"0","train_index <- createDataPartition(wine$quality_label, p = 0.8, list = FALSE)"
"0","train_data <- wine[train_index, ]"
"0","test_data <- wine[-train_index, ]"
"0",""
"0","# Logistic Regression Model"
"0","log_model <- glm(quality_label ~ ., data = train_data, family = binomial)"
"0","log_probs <- predict(log_model, newdata = test_data, type = ""response"")"
"0","log_preds <- ifelse(log_probs > 0.5, ""High"", ""Low"")"
"0","log_preds <- factor(log_preds, levels = c(""Low"", ""High""))"
"0",""
"0","# Confusion Matrix for Logistic Regression"
"0","confusionMatrix(log_preds, test_data$quality_label)"
"2","Warning in confusionMatrix.default(log_preds, test_data$quality_label) :"
"2","
 "
"2"," Levels are not in the same order for reference and data. Refactoring data to match.
"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1"," High"
"1"," Low"
"1","
      High"
"1","   46"
"1"," 113"
"1","
      Low "
"1","  125"
"1","  35"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.2539          "
"1","
"
"1","                 95% CI :"
"1"," (0.2071, 0.3054)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5361          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1.0000          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," -0.4918         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.4758          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.2690          "
"1","
"
"1","            Specificity :"
"1"," 0.2365          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.2893          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.2187          "
"1","
"
"1","             Prevalence :"
"1"," 0.5361          "
"1","
"
"1","         Detection Rate :"
"1"," 0.1442          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.4984          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.2527          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," High            "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","# Random Forest Model"
"0","set.seed(123)"
"0","rf_model <- randomForest(quality_label ~ ., data = train_data, ntree = 100, importance = TRUE)"
"0",""
"0","# Predictions from Random Forest"
"0","rf_preds <- predict(rf_model, newdata = test_data)"
"0",""
"0","# Confusion Matrix for Random Forest"
"0","confusionMatrix(rf_preds, test_data$quality_label)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1"," High"
"1"," Low"
"1","
      High"
"1","  144"
"1","  26"
"1","
      Low "
"1","   27"
"1"," 122"
"1","
"
"1",""
"1","                         "
"1","                "
"1","
"
"1","               Accuracy :"
"1"," 0.8339         "
"1","
"
"1","                 95% CI :"
"1"," (0.7884, 0.873)"
"1","
"
"1","    No Information Rate :"
"1"," 0.5361         "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," <2e-16         "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","                  Kappa :"
"1"," 0.6661         "
"1","
"
"1","                         "
"1","                "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 1              "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","            Sensitivity :"
"1"," 0.8421         "
"1","
"
"1","            Specificity :"
"1"," 0.8243         "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.8471         "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.8188         "
"1","
"
"1","             Prevalence :"
"1"," 0.5361         "
"1","
"
"1","         Detection Rate :"
"1"," 0.4514         "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.5329         "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.8332         "
"1","
"
"1","                         "
"1","                "
"1","
"
"1","       'Positive' Class :"
"1"," High           "
"1","
"
"1","                         "
"1","                "
"1","
"
"0","# Variable Importance Plot"
"0","varImpPlot(rf_model)"
