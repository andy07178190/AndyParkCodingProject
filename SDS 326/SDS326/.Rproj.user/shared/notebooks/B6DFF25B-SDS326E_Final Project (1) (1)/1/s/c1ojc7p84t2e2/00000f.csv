"0","# Boost Interpretation"
"0","library(xgboost)  "
"0","library(caret)  "
"0","library(dplyr)    "
"0",""
"0","clf <- wines %>%"
"0","  dplyr::mutate(lbl = factor(ifelse(quality >= 6, ""High"", ""Low""), levels = c(""Low"",""High""))) %>%"
"0","  dplyr::select(alcohol, volatile_acidity, sulphates, residual_sugar, lbl)"
"0","set.seed(5)"
"0","idx <- caret::createDataPartition(clf$lbl, p = 0.8, list = F)"
"0","train <- clf[idx, ]"
"0","test <- clf[-idx, ]"
"0",""
"0","train_mat <- as.matrix(train %>% dplyr::select(-lbl))"
"0","train_lab <- as.numeric(train$lbl == ""High"")"
"0","test_mat <- as.matrix(test  %>% dplyr::select(-lbl))"
"0","test_lab <- as.numeric(test$lbl == ""High"")"
"0",""
"0","dtrain <- xgb.DMatrix(data = train_mat, label = train_lab)"
"0","dtest <- xgb.DMatrix(data = test_mat, label = test_lab)"
"0",""
"0","params <- list(objective = ""binary:logistic"", eval_metric = ""auc"")"
"0","xgb_model <- xgb.train("
"0","  params = params,"
"0","  data = dtrain,"
"0","  nrounds = 100,"
"0","  watchlist = list(train = dtrain, val = dtest),"
"0","  early_stopping_rounds = 10,"
"0","  verbose = 0"
"0",")"
"0","xgb_scores <- predict(xgb_model, dtest)"
"0","xgb_pred <- factor(ifelse(xgb_scores > 0.5, ""High"", ""Low""),"
"0","                     levels = c(""Low"",""High""))"
"0","print(caret::confusionMatrix(xgb_pred, test$lbl))"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1"," Low"
"1"," High"
"1","
      Low "
"1"," 311"
"1","  118"
"1","
      High"
"1"," 165"
"1","  704"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.782           "
"1","
"
"1","                 95% CI :"
"1"," (0.7585, 0.8042)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6333          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," < 2.2e-16       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.5206          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.006249        "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.6534          "
"1","
"
"1","            Specificity :"
"1"," 0.8564          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.7249          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.8101          "
"1","
"
"1","             Prevalence :"
"1"," 0.3667          "
"1","
"
"1","         Detection Rate :"
"1"," 0.2396          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.3305          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.7549          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," Low             "
"1","
"
"1","                         "
"1","                 "
"1","
"
